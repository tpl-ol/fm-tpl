# repl.tpld.toml
tpl-spec = "0.1.0"
from = "ts"
to = "zh_CN"

type = "lib:node"
# repl.d.ts
scope = "m:repl"
scope_to = "命令循环"

# 全局
[[d]]
scope = ""
[d.d]
writer = "写者"
REPL_MODE_SLOPPY = "执行模式宽松"
REPL_MODE_STRICT = "执行模式严格"
"start()" = "开始()"

[[d]]
scope = "t:"
[d.d]
REPLEval = "命令循环执行"
REPLWriter = "命令循环写者"
REPLCommandAction = "命令循环命令动作"

[[d]]
scope = "ReplOptions"
to = "命令循环选项"
[d.d]
prompt = "提示符"
input = "输入"
output = "输出"
terminal = "终端"
eval = "执行"
preview = "预览"
useColors = "用颜色"
useGlobal = "用全局"
ignoreUndefined = "忽略未定义"
writer = "写者"
completer = "补全器"
replMode = "执行模式"
breakEvalOnSigint = "中断信号时停止执行"

[[d]]
scope = "REPLCommand"
to = "命令循环命令"
[d.d]
help = "帮助"
action = "动作"

[[d]]
scope = "REPLServer"
to = "命令循环服务器"
[d.d]
context = "语境"
inputStream = "输入流"
outputStream = "输出流"
input = "输入"
output = "输出"
commands = "命令"
editorMode = "编辑器模式"
underscoreAssigned = "下划线已分配"
last = "最后"
underscoreErrAssigned = "下划线错误已分配"
lastError = "最后错误"
eval = "执行"
useColors = "用颜色"
useGlobal = "用全局"
ignoreUndefined = "忽略未定义"
writer = "写者"
completer = "补全器"
replMode = "执行模式"
"constructor()" = "构造()"
"defineCommand()" = "定义命令()"
"displayPrompt()" = "显示提示符()"
"clearBufferedCommand()" = "清空缓存命令()"
"setupHistory()" = "设置历史()"

"addListener()" = "加监听器"
"emit()" = "发出()"
"on()" = "之时()"
"once()" = "一次()"
"prependListener()" = "前置监听器()"
"prependOnceListener()" = "前置一次监听器()"

[[d]]
scope = ["REPLServer.addListener.event", "REPLServer.emit.event", "REPLServer.on.event", "REPLServer.once.event", "REPLServer.prependListener.event", "REPLServer.prependOnceListener.event"]
[d.d]
close = "关闭"
line = "行"
pause = "暂停"
resume = "恢复"
SIGCONT = "信号继续"
SIGINT = "信号中断"
SIGTSTP = "信号暂停"
exit = "退出"
reset = "重置"

[[d]]
scope = "Recoverable"
to = "可恢复"
[d.d]
err = "错"
"constructor()" = "构造()"
